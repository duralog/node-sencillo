// Generated by CoffeeScript 1.3.3
(function() {
  var Gitteh, NativeRepository, Repository, bindings;

  bindings = require("../build/Release/gitteh");

  NativeRepository = bindings.Repository;

  Repository = function(nativeRepo) {
    if (!nativeRepo instanceof NativeRepository) {
      throw new Error("Don't use this directly, see Gitteh.openRepository/Gitteh.initRepository");
    }
    this.exists = function(oid, cb) {
      return nativeRepo.exists(oid, cb);
    };
    Object.defineProperty(this, "path", {
      value: nativeRepo.path,
      writable: false,
      enumerable: true
    });
    return this;
  };

  Gitteh = {
    openRepository: function(path, cb) {
      var res, wrappedCb;
      if (cb != null) {
        wrappedCb = function(err, repo) {
          if (err) {
            return err;
          }
          return new Repository(repo);
        };
      }
      res = bindings.openRepository(path, wrappedCb);
      console.log(res);
      console.log(res instanceof NativeRepository);
      if (res instanceof NativeRepository) {
        return new Repository(res);
      }
    }
  };

  module.exports = Gitteh;

  module.exports.Repository = Repository;

}).call(this);
